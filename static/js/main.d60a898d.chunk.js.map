{"version":3,"sources":["actions/index.js","containers/SearchBar/SearchBar.js","utils/api.js","thunks/putNote.js","thunks/deleteNoteThunk.js","containers/NoteCard/NoteCard.js","thunks/putAllNotes.js","thunks/fetchUser.js","containers/LoginButton/LoginButton.js","containers/NoteContainer/NoteContainer.js","components/CompleteItem/CompleteItem.js","components/IncompleteItem/IncompleteItem.js","containers/NoteForm/NoteForm.js","thunks/postNote.js","components/Error404/Error404.js","components/Loader/Loader.js","containers/App/App.js","serviceWorker.js","reducers/index.js","reducers/notesReducer.js","reducers/isLoadingReducer.js","reducers/errorReducer.js","reducers/statusReducer.js","reducers/queryReducer.js","reducers/userReducer.js","index.js","firebaseConfig.js","images/uncheckedicon.svg","images/checkedicon.svg","images/deleteicon.svg","images/edit.svg","images/delete.svg","images/newnoteicon.svg","images/googleicon.svg","images/paletteicon.svg","images/notebook.svg"],"names":["setNotes","notes","type","addNote","note","updateNote","deleteNote","id","toggleLoading","bool","setError","message","setStatus","code","setUser","user","SearchBar","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","filterNotes","e","userQuery","target","value","setQuery","props","inherits","createClass","key","react_default","a","createElement","onChange","className","placeholder","Component","connect","dispatch","query","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","options","response","errorMessage","_args","wrap","_context","prev","next","undefined","fetch","sent","ok","json","Error","abrupt","stop","_x","createOptions","method","data","body","JSON","stringify","headers","Content-Type","putNote","title","listItems","color","status","t0","deleteNoteThunk","NoteCard","getCompleteItems","filter","item","isComplete","map","description","src","checkedicon","alt","onClick","handleComplete","getIncompleteItems","uncheckedicon","itemID","_this$props","updatedListItems","objectSpread","handleDelete","_callee2","_this$props2","_context2","handleDrag","event","dataTransfer","setData","index","handleDrop","_this$props3","droppedOnIndex","putAllNotes","updatedNotes","toArray","slice","draggedIndex","getData","tempNote","splice","toConsumableArray","_this$props4","disabled","result","push","noteCardClass","draggable","onDragStart","onDragOver","preventDefault","onDrop","Link","to","editicon","deleteicon","state","fetchUser","userData","displayName","email","uid","_ref2","LoginButton","handleClick","google","firebase","auth","GoogleAuthProvider","signInWithPopup","googleicon","NoteContainer","addWelcomeNote","welcomeMessage","containers_NoteCard_NoteCard","assign","getNotesToDisplay","toLowerCase","includes","signOut","isDisabled","cards","reverse","disabledClass","welcome","containers_LoginButton_LoginButton","newnoteicon","react_masonry_css_es5_default","breakpointCols","default","1552","1296","1040","784","528","columnClassName","CompleteItem","handleItemDelete","IncompleteItem","focusedListItemID","name","autoFocus","handleChange","NoteForm","createListItem","editListItems","getIncompleteListItems","_this$state","components_IncompleteItem_IncompleteItem","getCompleteListItems","components_CompleteItem_CompleteItem","getNewListItemInput","shortid","generate","getTitleInput","setState","_event$target","find","handleColorChoice","handleKeydown","handleNoteDelete","match","params","handleSubmit","_this$state2","postNote","_x2","toggleShowColorOptions","showColorOptions","document","addEventListener","path","removeEventListener","_this2","_this$state3","buttons","onSubmit","trim","paletteicon","Redirect","_note","Error404","Loader","App","checkUser","onAuthStateChanged","getNotesRoute","currentNote","containers_NoteContainer_NoteContainer","containers_NoteForm_NoteForm","components_Error404_Error404","getNewNoteRoute","_ref3","notebookicon","containers_SearchBar_SearchBar","isLoading","components_Loader_Loader","Switch","Route","render","exact","component","withRouter","error","Boolean","window","location","hostname","rootReducer","combineReducers","action","initializeApp","apiKey","authDomain","devTools","composeWithDevTools","applyMiddleware","thunk","store","createStore","provider","es","BrowserRouter","containers_App_App","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d60a898d.chunk.js","sourcesContent":["export const setNotes = (notes) => ({\n  type: 'SET_NOTES',\n  notes\n});\n\nexport const addNote = (note) => ({\n  type: 'ADD_NOTE',\n  note\n});\n\nexport const updateNote = (note) => ({\n  type: 'UPDATE_NOTE',\n  note\n});\n\nexport const deleteNote = (id) => ({\n  type: 'DELETE_NOTE',\n  id\n});\n\nexport const toggleLoading = (bool) => ({\n  type: 'TOGGLE_LOADING',\n  bool\n});\n\nexport const setError = (message) => ({\n  type: 'SET_ERROR',\n  message\n});\n\nexport const setStatus = (code) => ({\n  type: 'SET_STATUS',\n  code\n});\n\nexport const setQuery = (query) => ({\n  type: 'SET_QUERY',\n  query\n});\n\nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  user\n});","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setQuery } from '../../actions';\nimport PropTypes from 'prop-types';\n\nexport class SearchBar extends Component {\n  filterNotes = (e) => {\n    const userQuery = e.target.value;\n    const { setQuery } = this.props;\n    setQuery(userQuery);\n  }\n\n  render() {\n    return (\n      <input\n        onChange={this.filterNotes}\n        className='SearchBar--input'\n        placeholder='Search notes' />\n    )\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setQuery: (query) => dispatch(setQuery(query))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n\nSearchBar.propTypes = {\n  setQuery: PropTypes.func\n}","export const fetchData = async (url, options = {}) => {\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    const errorMessage = await response.json();\n    throw new Error(errorMessage);\n  }\n  return await response;\n}\n\nexport const createOptions = (method, data) => ({\n  method,\n  body: JSON.stringify(data),\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});","import { fetchData, createOptions } from '../utils/api';\nimport { setError, updateNote, toggleLoading, setStatus } from '../actions';\n\nexport const putNote = (note, user) => {\n  return async (dispatch) => {\n    const { id, title, listItems, color } = note;\n    const url = `https://keeper-turing-api.herokuapp.com/api/v1/notes/${id}`;\n    const options = createOptions('PUT', { title, listItems, color, user });\n    try {\n      dispatch(toggleLoading(true));\n      const response = await fetchData(url, options);\n      dispatch(toggleLoading(false));\n      dispatch(updateNote(note));\n      dispatch(setStatus(response.status));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","import { fetchData, createOptions } from '../utils/api';\nimport { setError, deleteNote, toggleLoading, setStatus } from '../actions';\n\nexport const deleteNoteThunk = (id, user) => {\n  return async (dispatch) => {\n    const url = `https://keeper-turing-api.herokuapp.com/api/v1/notes/${id}`;\n    const options = createOptions('DELETE', { user });\n    try {\n      dispatch(toggleLoading(true));\n      const response = await fetchData(url, options);\n      dispatch(toggleLoading(false));\n      dispatch(setStatus(response.status));\n      dispatch(deleteNote(id));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { putNote } from '../../thunks/putNote';\nimport { putAllNotes } from '../../thunks/putAllNotes';\nimport { deleteNoteThunk } from '../../thunks/deleteNoteThunk';\nimport uncheckedicon from '../../images/uncheckedicon.svg';\nimport checkedicon from '../../images/checkedicon.svg';\nimport editicon from '../../images/edit.svg';\nimport deleteicon from '../../images/delete.svg';\nimport { setStatus } from '../../actions';\n\nexport class NoteCard extends Component {\n  getCompleteItems = () => {\n    const { listItems } = this.props;\n    const completeItems = listItems.filter(item => item.isComplete);\n    return (\n      completeItems.map(item => {\n        const { description, id } = item;\n        return (\n          <span key={id} className='NoteCard--span--complete'>\n            <img\n              src={checkedicon}\n              className='NoteCard--icon--checked'\n              alt='checked icon'\n              onClick={() => this.handleComplete(id)}\n            />\n            <p className='NoteForm--p--complete'>{description}</p>\n          </span>\n        );\n      })\n    );\n  }\n\n  getIncompleteItems = () => {\n    const { listItems } = this.props;\n    const incompleteItems = listItems.filter(item => !item.isComplete);\n    return (\n      incompleteItems.map(item => {\n        const { description, id } = item;\n        return (\n          <span key={id} className='NoteCard--span--incomplete'>\n            <img\n              src={uncheckedicon}\n              className='NoteCard--icon--unchecked'\n              alt='unchecked icon'\n              onClick={() => this.handleComplete(id)}\n            />\n            <p className='NoteForm--p--incomplete'>{description}</p>\n          </span>\n        );\n      })\n    );\n  }\n\n  handleComplete = async (itemID) => {\n    const { id, title, color, listItems, putNote, setStatus, user } = this.props;\n    const updatedListItems = listItems.map(item => {\n      const { isComplete } = item;\n      return item.id === itemID ? { ...item, isComplete: !isComplete } : item;\n    });\n    await putNote({ id, title, color, listItems: updatedListItems }, user);\n    setStatus(0);\n  }\n\n  handleDelete = async () => {\n    const { id, deleteNoteThunk, setStatus, user } = this.props;\n    await deleteNoteThunk(id, user);\n    setStatus(0);\n  }\n\n  handleDrag = (event) => {\n    event.dataTransfer.setData('draggedIndex', this.props.index);\n  }\n\n  handleDrop = (event) => {\n    const { notes, index: droppedOnIndex, putAllNotes, user } = this.props;\n    const [...updatedNotes] = notes;\n    const draggedIndex = event.dataTransfer.getData('draggedIndex');\n    const tempNote = updatedNotes.splice(draggedIndex, 1);\n    updatedNotes.splice(droppedOnIndex, 0 , ...tempNote);\n    putAllNotes(updatedNotes, user);\n  }\n\n  render() {\n    const { id, title, color, disabled } = this.props;\n    const result = [\n      ...this.getIncompleteItems(),\n      ...this.getCompleteItems()\n    ];\n    if (result.length > 10) {\n      result.splice(10);\n      result.push(<p className='NoteCard--ellipsis' key='...'>...</p>);\n    }\n    let noteCardClass = 'NoteCard--background-';\n    if (disabled) {\n      noteCardClass += 'disabled';\n    } else {\n      noteCardClass += color;\n    }\n    return (\n      <div \n        draggable\n        onDragStart={this.handleDrag}\n        onDragOver={(event) => event.preventDefault()}\n        onDrop={this.handleDrop}\n        className={noteCardClass}\n      >\n        <h3 className='NoteCard--h3'>{title}</h3>\n        <div>{result}</div>\n        <span className='NoteCard--icon-container'>\n          <Link to={'/notes/' + id}>\n            <img\n              className='NoteCard--edit-icon'\n              src={editicon}\n              alt='edit icon'\n            />\n          </Link>\n          <img\n            className='NoteCard--delete-icon'\n            src={deleteicon}\n            alt='delete icon'\n            onClick={this.handleDelete}\n          />\n        </span>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  notes: state.notes,\n  user: state.user\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  putAllNotes: (notes, user) => dispatch(putAllNotes(notes, user)),\n  putNote: (note, user) => dispatch(putNote(note, user)),\n  deleteNoteThunk: (id, user) => dispatch(deleteNoteThunk(id, user)),\n  setStatus: (code) => dispatch(setStatus(code))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteCard);\n\nNoteCard.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  listItems: PropTypes.array,\n  color: PropTypes.string,\n  notes: PropTypes.array,\n  putAllNotes: PropTypes.func,\n  putNote: PropTypes.func,\n  deleteNote: PropTypes.func,\n  setStatus: PropTypes.func,\n  user: PropTypes.object\n}","import { fetchData, createOptions } from '../utils/api';\nimport { setNotes, setError, toggleLoading } from '../actions';\n\nexport const putAllNotes = (notes, user) => {\n  return async (dispatch) => {\n    const url = 'https://keeper-turing-api.herokuapp.com/api/v1/notes';\n    const options = createOptions('PUT', { notes, user });\n    try {\n      dispatch(toggleLoading(true));\n      await fetchData(url, options);\n      dispatch(toggleLoading(false));\n      dispatch(setNotes(notes));\n    } catch(error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","import { setNotes, setError, toggleLoading, setUser } from '../actions';\nimport { fetchData, createOptions } from '../utils/api';\n\nexport const fetchUser = (userData) => {\n  return async (dispatch) => {\n    try {\n      dispatch(toggleLoading(true));\n      const { displayName, email, uid } = userData;\n      const user = { displayName, email, uid };\n      const url = 'https://keeper-turing-api.herokuapp.com/api/v1/users';\n      const options = createOptions('POST', user);\n      const response = await fetchData(url, options);\n      const { notes } = await response.json();\n      dispatch(toggleLoading(false));\n      dispatch(setUser(user));\n      dispatch(setNotes(notes));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport googleicon from '../../images/googleicon.svg';\nimport PropTypes from 'prop-types';\nimport { fetchUser } from '../../thunks/fetchUser';\nimport { setError } from '../../actions';\nimport { connect } from 'react-redux';\n\nexport class LoginButton extends Component {\n  handleClick = async () => {\n    const google = new firebase.auth.GoogleAuthProvider();\n    try{\n      const { user: userData } = await firebase.auth().signInWithPopup(google);\n      this.props.fetchUser(userData);\n    } catch (error) {\n      this.props.setError(error.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className='Login'>\n        <button className='Login--button' onClick={this.handleClick}>\n          <img src={googleicon} alt='Google Icon' className='Login--icon'/>\n          <span className='Login--text'>Sign in with Google</span>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchUser: (userData) => dispatch(fetchUser(userData)),\n  setError: (message) => dispatch(setError(message))\n});\n\nexport default connect(null, mapDispatchToProps)(LoginButton);\n\nLoginButton.propTypes = {\n  fetchUser: PropTypes.func,\n  setError: PropTypes.func\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NoteCard from '../NoteCard/NoteCard';\nimport { Link } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\nimport newnoteicon from '../../images/newnoteicon.svg';\nimport LoginButton from '../LoginButton/LoginButton';\nimport { setUser, setNotes } from '../../actions';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport class NoteContainer extends Component {\n  addWelcomeNote = () => {\n    const message = this.props.user ? \n      'Click the plus sign above to get started' : 'Sign in with Google';\n    const welcomeMessage = {\n      id: 'welcome',\n      title: 'Welcome to Keeper!',\n      listItems: [\n        { id: 'firstInstruction', description: 'Keep track of your projects', isComplete: false },\n        { id: 'secondInstruction', description: 'List out your tasks to track', isComplete: false },\n        { id: 'thirdInstruction', description: message, isComplete: false },\n      ],\n      color: 'white'\n    };\n    return <NoteCard {...welcomeMessage} key={welcomeMessage.id} disabled/>\n  }\n\n  getNotesToDisplay = () => {\n    const { notes } = this.props;\n    const query = this.props.query.toLowerCase();\n    if (query) {\n      return notes.filter(note => {\n        return note.title.toLowerCase().includes(query) ||\n        note.listItems.filter(item => {\n          return item.description.toLowerCase().includes(query)\n        }).length;\n      });\n    }\n    return notes;\n  }\n\n  handleClick = async () => {\n    await firebase.auth().signOut();\n    this.props.setUser(null);\n    this.props.setNotes([]);\n  }\n\n  render() {\n    const { notes, isDisabled, user } = this.props;\n\n    const notesToDisplay = this.getNotesToDisplay();\n    \n    const cards = notesToDisplay.map((note, index) => {\n      return <NoteCard {...note} key={note.id} index={index} />\n    }).reverse();\n\n    const breakpoints = {\n      default: 6,\n      1552: 5,\n      1296: 4,\n      1040: 3,\n      784: 2,\n      528: 1\n    };\n    const disabledClass = isDisabled ? '--disabled' : '';\n\n    if (!notes.length) {\n      const welcome = this.addWelcomeNote();\n      cards.push(welcome);\n    }\n\n    return (\n      <div className={'NoteContainer' + disabledClass}>\n        <div className='NoteContainer--div'>\n          {!user && <LoginButton />}\n          {user && \n            <Link to='/new-note' className='NoteContainer--link'>\n              <img\n                src={newnoteicon}\n                className='NoteContainer--icon--new-note'\n                alt='new note icon' />\n              <span className='NoteContainer--span'>\n                New Note\n              </span>\n            </Link>}\n          {user &&\n            <button className='NoteContainer--sign-out' onClick={this.handleClick}>\n              Sign Out\n            </button>}\n        </div>\n        <Masonry\n          breakpointCols={breakpoints}\n          className='NoteContainer--cards'\n          columnClassName='NoteContainer--cards-masonry-cols'>\n          {cards}\n        </Masonry>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  notes: state.notes,\n  query: state.query,\n  user: state.user\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(setUser(user)),\n  setNotes: (notes) => dispatch(setNotes(notes))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteContainer);\n\nNoteContainer.propTypes = {\n  notes: PropTypes.array,\n  isLoading: PropTypes.bool,\n  query: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  user: PropTypes.object,\n  setUser: PropTypes.func,\n  setNotes: PropTypes.func\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deleteicon from '../../images/deleteicon.svg';\nimport checkedicon from '../../images/checkedicon.svg';\n\nconst CompleteItem = (props) => {\n  const { id, description } = props;\n  return (\n    <span className='NoteForm--span--complete'>\n      <img\n        src={checkedicon}\n        className='NoteForm--icon--checked'\n        onClick={() => props.handleComplete(id)}\n        alt='checked icon'\n      />\n      <p className='NoteForm--p--complete'>{description}</p>\n      <img\n        src={deleteicon}\n        className='NoteForm--icon--delete'\n        onClick={() => props.handleItemDelete(id)}\n        alt='delete icon'\n      />\n    </span>\n  )\n}\n\nCompleteItem.propTypes = {\n  id: PropTypes.string,\n  description: PropTypes.string,\n  handleComplete: PropTypes.func,\n  handleItemDelete: PropTypes.func\n}\n\nexport default CompleteItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport deleteicon from '../../images/deleteicon.svg';\nimport uncheckedicon from '../../images/uncheckedicon.svg';\n\nconst IncompleteItem = (props) => {\n  const { id, description, focusedListItemID } = props;\n  return (\n    <span className='NoteForm--span--incomplete'>\n      <img\n        src={uncheckedicon}\n        className='NoteForm--icon--unchecked'\n        onClick={() => props.handleComplete(id)}\n        alt='unchecked icon'\n      />\n      <input\n        name={id}\n        value={description}\n        autoFocus={id === focusedListItemID}\n        onChange={props.handleChange}\n        className='NoteForm--list-item'\n      />\n      <img\n        src={deleteicon}\n        className='NoteForm--icon--delete'\n        onClick={() => props.handleItemDelete(id)}\n        alt='delete icon'\n      />\n    </span>\n  )\n}\n\nIncompleteItem.propTypes = {\n  id: PropTypes.string,\n  description: PropTypes.string,\n  focusedListItemID: PropTypes.string,\n  handleComplete: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleItemDelete: PropTypes.func\n}\n\nexport default IncompleteItem;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport shortid from 'shortid';\nimport CompleteItem from '../../components/CompleteItem/CompleteItem';\nimport IncompleteItem from '../../components/IncompleteItem/IncompleteItem';\nimport { putNote } from '../../thunks/putNote';\nimport { postNote } from '../../thunks/postNote';\nimport { deleteNoteThunk } from '../../thunks/deleteNoteThunk';\nimport { setStatus } from '../../actions';\nimport paletteicon from '../../images/paletteicon.svg';\n\nexport class NoteForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      listItems: [],\n      focusedListItemID: 'title',\n      color: 'white',\n      showColorOptions: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n    const { path } = this.props.match;\n    const { title, listItems, color } = this.props;\n    if (path !== '/new-note') {\n      this.setState({ title, listItems, color });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n    this.props.setStatus(0);\n  }\n\n  createListItem = (id, description) => ({\n    id,\n    description,\n    isComplete: false\n  })\n\n  editListItems = (listItems, id, description) => {\n    return listItems.map(item => {\n      return item.id === id ? { ...item, description } : item;\n    });\n  }\n\n  getIncompleteListItems = () => {\n    const { focusedListItemID, listItems } = this.state;\n    const incompleteItems = listItems.filter(item => !item.isComplete);\n    return incompleteItems.map(item => {\n      return (\n        <IncompleteItem\n          key={item.id}\n          id={item.id}\n          description={item.description}\n          focusedListItemID={focusedListItemID}\n          handleComplete={this.handleComplete}\n          handleChange={this.handleChange}\n          handleItemDelete={this.handleItemDelete}\n        />\n      );\n    });\n  }\n\n  getCompleteListItems = () => {\n    const { listItems } = this.state;\n    const completeItems = listItems.filter(item => item.isComplete);\n    return completeItems.map(item => {\n      return (\n        <CompleteItem\n          key={item.id}\n          id={item.id}\n          description={item.description}\n          handleComplete={this.handleComplete}\n          handleItemDelete={this.handleItemDelete}\n        />\n      );\n    });\n  }\n\n  getNewListItemInput = () => (\n    <input\n      name={shortid.generate()}\n      value=''\n      onChange={this.handleChange}\n      placeholder='List item'\n      className='NoteForm--new-input'\n    />\n  )\n\n  getTitleInput = () => (\n    <input\n      name='title'\n      value={this.state.title}\n      autoFocus={this.state.focusedListItemID === 'title'}\n      placeholder='Title'\n      onChange={(event) => this.setState({ title: event.target.value })}\n      className='NoteForm--title'\n    />\n  )\n\n  handleChange = (event) => {\n    const { name: id, value: description } = event.target;\n    const { listItems } = this.state;\n    const existingListItem = listItems.find(item => item.id === id);\n    let updatedListItems;\n    if (existingListItem) {\n      updatedListItems = this.editListItems(listItems, id, description);\n    } else {\n      updatedListItems = [...listItems, this.createListItem(id, description)];\n    }\n    this.setState({ listItems: updatedListItems, focusedListItemID: id });\n  }\n\n  handleColorChoice = (event) => {\n    event.preventDefault();\n    const color = event.target.id;\n    this.setState({ color });\n  }\n\n  handleComplete = (id) => {\n    const { listItems } = this.state;\n    const updatedListItems = listItems.map(item => {\n      const { isComplete } = item;\n      return item.id === id ? { ...item, isComplete: !isComplete } : item;\n    });\n    this.setState({ listItems: updatedListItems });\n  }\n\n  handleItemDelete = (id) => {\n    const { listItems } = this.state;\n    const updatedListItems = listItems.filter(item => item.id !== id);\n    this.setState({ listItems: updatedListItems });\n  }\n\n  handleKeydown = (event) => {\n    event.key === 'Escape' && this.props.setStatus(200);\n  }\n\n  handleNoteDelete = async (event) => {\n    event.preventDefault();\n    const { id } = this.props.match.params;\n    const { deleteNoteThunk, user } = this.props;\n    await deleteNoteThunk(id, user);\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { user } = this.props;\n    const { id } = this.props.match.params;\n    const { title, listItems, color } = this.state;\n    if (id) {\n      await this.props.putNote({ id, title, listItems, color }, user);\n    } else {\n      await this.props.postNote({ title, listItems, color }, user);\n    }\n  }\n\n  toggleShowColorOptions = () => {\n    const { showColorOptions } = this.state;\n    this.setState({ showColorOptions: !showColorOptions });\n  }\n\n  render() {\n    const { title, color, showColorOptions } = this.state;\n    const { status } = this.props;\n    const { path } = this.props.match;\n    const colors = ['white', 'pink', 'orange', 'yellow', 'green', 'blue', 'lavender', 'gray'];\n    const buttons = colors.map(color => {\n      return <button key={color} id={color} className='NoteForm--color' onClick={this.handleColorChoice}></button >\n    });\n\n    return (\n      <div className='NoteForm--div--overlay'>\n        <form className={'NoteForm--background-' + color} onSubmit={this.handleSubmit}>\n          {this.getTitleInput()}\n          <div className='NoteForm--title-and-listitems'>\n            {this.getIncompleteListItems()}\n            {this.getNewListItemInput()}\n            {this.getCompleteListItems()}\n          </div>\n          <button\n            className={'NoteForm--button-' + color}\n            disabled={title.trim() === ''}>\n            Save\n          </button>\n          {path !== '/new-note' ?\n            <button className={'NoteForm--button-' + color} onClick={this.handleNoteDelete}>\n              Delete\n            </button> :\n            <Link to='/'>\n              <button className={'NoteForm--button-' + color}>Discard</button>\n            </Link>}\n          {showColorOptions &&\n            <div className='NoteForm--color-options'>\n              {buttons}\n            </div>\n          }\n          <div className='NoteForm--div--palette-icon'>\n            <img className='NoteForm--palette-icon' src={paletteicon} alt='palette icon' onClick={this.toggleShowColorOptions} />\n          </div>\n          {(status >= 200 && status < 300) && <Redirect to='/' />}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  status: state.status,\n  user: state.user\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  putNote: (note, user) => dispatch(putNote(note, user)),\n  postNote: (note, user) => dispatch(postNote(note, user)),\n  deleteNoteThunk: (id, user) => dispatch(deleteNoteThunk(id, user)),\n  setStatus: (code) => dispatch(setStatus(code))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteForm);\n\nNoteForm.propTypes = {\n  deleteNoteThunk: PropTypes.func,\n  putNote: PropTypes.func,\n  postNote: PropTypes.func,\n  status: PropTypes.number,\n  setStatus: PropTypes.func,\n  user: PropTypes.object\n}","import { fetchData, createOptions } from '../utils/api';\nimport { addNote, setError, toggleLoading, setStatus } from '../actions';\n\nexport const postNote = (note, user) => {\n  return async (dispatch) => {\n    const { title, listItems, color } = note;\n    const url = 'https://keeper-turing-api.herokuapp.com/api/v1/notes/';\n    const options = createOptions('POST', { title, listItems, color, user });\n    try {\n      dispatch(toggleLoading(true));\n      const response = await fetchData(url, options);\n      const note = await response.json();\n      dispatch(toggleLoading(false));\n      dispatch(addNote(note));\n      dispatch(setStatus(response.status));\n    } catch (error) {\n      dispatch(setError(error.message));\n    }\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Error404 = () => {\n  return (\n    <div className ='Error404'>\n      <h2 className='Error404--h2'>No Note Found</h2>\n      <Link to='/' className='Error404--Link'>Back to Notes</Link>\n    </div>\n  )\n}\n\nexport default Error404;","import React from 'react';\n\nconst Loader = () => {\n\n  return (\n    <div className=\"Loader\">\n      <div className=\"Loader--div Loader--balls\"></div>\n    </div>\n  )\n};\n\nexport default Loader;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport SearchBar from '../SearchBar/SearchBar';\nimport NoteContainer from '../NoteContainer/NoteContainer';\nimport NoteForm from '../NoteForm/NoteForm';\nimport { fetchUser } from '../../thunks/fetchUser';\nimport Error404 from '../../components/Error404/Error404';\nimport notebookicon from '../../images/notebook.svg';\nimport Loader from '../../components/Loader/Loader';\nimport { toggleLoading } from '../../actions';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.checkUser();\n  }\n\n  checkUser = () => {\n    this.props.toggleLoading(true);\n    firebase.auth().onAuthStateChanged(async (userData) => {\n      if (userData) {\n        this.props.fetchUser(userData);\n      } else {\n        this.props.toggleLoading(false);\n      }\n    });\n  }\n\n  getNotesRoute = ({ match }) => {\n    const { notes } = this.props;\n    const { id } = match.params;\n    const currentNote = notes.find(note => note.id === id);\n    return currentNote ? (\n      [\n        <NoteContainer isDisabled={true} key=\"NoteContainer\" />,\n        <NoteForm {...currentNote} match={match} key=\"NoteForm\" />\n      ]\n    ) : <Error404 />;\n  }\n\n  getNewNoteRoute = ({ match }) => {\n    const { user } = this.props;\n    return user ? (\n      [\n        <NoteContainer isDisabled={true} key=\"NoteContainer\" />,\n        <NoteForm match={match} key=\"NoteForm\" />\n      ]\n    ) : <Error404 />;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <header className='App--header'>\n          <h1 className='App--h1'>\n            <img className='App--notebook-icon' src={notebookicon} alt='note icon' />\n            Keeper\n          </h1>\n          <SearchBar />\n        </header>\n        {this.props.isLoading && <Loader />}\n        <Switch>\n          <Route path='/new-note' render={this.getNewNoteRoute} />\n          <Route path='/notes/:id' render={this.getNotesRoute} />\n          <Route exact path='/' component={NoteContainer} />\n          <Route component={Error404} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  notes: state.notes,\n  isLoading: state.isLoading,\n  error: state.error,\n  user: state.user\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  fetchUser: (userData) => dispatch(fetchUser(userData)),\n  toggleLoading: (bool) => dispatch(toggleLoading(bool))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nApp.propTypes = {\n  notes: PropTypes.array,\n  isLoading: PropTypes.bool,\n  error: PropTypes.string,\n  fetchUser: PropTypes.func,\n  toggleLoading: PropTypes.func,\n  user: PropTypes.object\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { notesReducer } from './notesReducer';\nimport { isLoadingReducer } from './isLoadingReducer';\nimport { errorReducer } from './errorReducer';\nimport { statusReducer } from './statusReducer';\nimport { queryReducer } from './queryReducer';\nimport { userReducer } from './userReducer';\n\nexport const rootReducer = combineReducers({\n  notes: notesReducer,\n  isLoading: isLoadingReducer,\n  error: errorReducer,\n  status: statusReducer,\n  query: queryReducer,\n  user: userReducer\n});","export const notesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_NOTES':\n      return action.notes;\n    case 'ADD_NOTE':\n      return [...state, action.note];\n    case 'UPDATE_NOTE':\n      return state.map(note => {\n        const { id } = action.note;\n        return note.id === id ? action.note : note;\n      });\n    case 'DELETE_NOTE':\n      return state.filter(note => note.id !== action.id);\n    default:\n      return state;\n  }\n}","export const isLoadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'TOGGLE_LOADING':\n      return action.bool;\n    default:\n      return state;\n  }\n}","export const errorReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      return action.message;\n    default:\n      return state;\n  }\n}","export const statusReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_STATUS':\n      return action.code;\n    default:\n      return state;\n  }\n}","export const queryReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_QUERY':\n      return action.query;\n    default:\n      return state;\n  }\n}","export const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { rootReducer } from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport firebase from 'firebase/app';\nimport { firebaseConfig } from './firebaseConfig';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst devTools = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(rootReducer, devTools);\nconst provider = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(provider, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyB7Pu_Sta0xfZgdOEGyKUI5pbU2gBn1zI0\",\n  authDomain: \"keeper-233521.firebaseapp.com\"\n};","module.exports = __webpack_public_path__ + \"static/media/uncheckedicon.284c00e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkedicon.c959b724.svg\";","module.exports = __webpack_public_path__ + \"static/media/deleteicon.777b93c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.5ef43b89.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.d98e9b10.svg\";","module.exports = __webpack_public_path__ + \"static/media/newnoteicon.0edd6a52.svg\";","module.exports = __webpack_public_path__ + \"static/media/googleicon.86fcd15e.svg\";","module.exports = __webpack_public_path__ + \"static/media/paletteicon.beacd3a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notebook.eadd7bd9.svg\";"],"sourceRoot":""}